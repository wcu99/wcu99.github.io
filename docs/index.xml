<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>一起成长吧</title>
    <link>https://wcu99.github.io/</link>
    <description>Recent content on 一起成长吧</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 08 Dec 2021 12:22:45 +0800</lastBuildDate><atom:link href="https://wcu99.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python中比较日期</title>
      <link>https://wcu99.github.io/post/loading/</link>
      <pubDate>Wed, 08 Dec 2021 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/loading/</guid>
      <description>datetime 方法 ex： star_time = 2021-10 end_time = 2022-12
import datetime import time</description>
    </item>
    
    <item>
      <title>python环境搭建selenium自动化测试框架</title>
      <link>https://wcu99.github.io/post/%E5%9F%BA%E4%BA%8Epython%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAselenium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Mon, 07 Sep 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/%E5%9F%BA%E4%BA%8Epython%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAselenium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</guid>
      <description>1.环境搭建 基于python环境搭建 1.python开发环境
2.安装selenium
3.安装浏览器
4.安装浏览器驱动
1.1安装selenium 注意：python3安装完毕并且能够正常运行
pip工具 pip是一个通用的python包管理工具，提供了对python包的查找、下载、安装、卸载功能。</description>
    </item>
    
    <item>
      <title>接口测试笔记01</title>
      <link>https://wcu99.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%9501/</link>
      <pubDate>Mon, 06 Apr 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%9501/</guid>
      <description>接口测试 A、是什么？ 测试后端实现是否符合接口规范
B、为什么？ 程序安全、效率
C、怎么用(实现流程) 模拟客户向服务器发送数据，然后查看响应
要素1：定位服务器资源(通过URL实现:http://www.baidu.com|http://127.0.0.1:8000/资源路径)
要素2：模拟用户提交数据
要素3:查看响应的结果是否符合预期</description>
    </item>
    
    <item>
      <title>python中for循环完整语法应用场景的例子</title>
      <link>https://wcu99.github.io/post/python%E4%B8%ADfor%E5%BE%AA%E7%8E%AF%E5%AE%8C%E6%95%B4%E8%AF%AD%E6%B3%95%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E7%9A%84%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Sat, 28 Mar 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/python%E4%B8%ADfor%E5%BE%AA%E7%8E%AF%E5%AE%8C%E6%95%B4%E8%AF%AD%E6%B3%95%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E7%9A%84%E4%BE%8B%E5%AD%90/</guid>
      <description>目标： python中for循环完整语法应用场景的例子 在遍历嵌套的数据类型时，例如：一个列表中包含了多个字典 需求：判断某一个字典中是否存在指定的值， 如果存在，提示并且退出循环；如果不存在，在循环整体结束后，给出一个统一的提示 字典一般用来保存一个人物或事务的完整信息 info_list = [ {&amp;#39;name&amp;#39;:&amp;#34;西门二狗&amp;#34;,&amp;#39;age&amp;#39;:20,&amp;#34;sex&amp;#34;:&amp;#39;男&amp;#39;}, {&amp;#39;name&amp;#39;:&amp;#34;上官翠花&amp;#34;,&amp;#39;age&amp;#39;:20,&amp;#34;sex&amp;#34;:&amp;#39;女&amp;#39;}, {&amp;#39;name&amp;#39;:&amp;#34;公孙大猫&amp;#34;,&amp;#39;age&amp;#39;:25,&amp;#34;sex&amp;#34;:&amp;#39;男&amp;#39;}, {&amp;#39;name&amp;#39;:&amp;#34;慕容饭桶&amp;#34;,&amp;#39;age&amp;#39;:30,&amp;#34;sex&amp;#34;:&amp;#39;男&amp;#39;} ] # 定义变量保存要查询的人物名字 find_name = &amp;#39;上官翠花&amp;#39; for i in info_list: # 临时变量i获取的是列表中一个一个的字典，通过get获取名字 if i.</description>
    </item>
    
    <item>
      <title>python中for循环的完整语法</title>
      <link>https://wcu99.github.io/post/python%E4%B8%ADfor%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 27 Mar 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/python%E4%B8%ADfor%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E8%AF%AD%E6%B3%95/</guid>
      <description>python中for循环的完整语法 #for循环的完整语法,for&amp;hellip;else语法 #1.作用： 遍历数据时，使用的语法格式，满足条件时执行break语句提前终止循环，不执行break语句，则会执行else部分
#2.格式： for 临时变量 in 容器:
​	对临时变量的处理</description>
    </item>
    
    <item>
      <title>python中实现for循环遍历四大容器</title>
      <link>https://wcu99.github.io/post/python%E5%AE%9E%E7%8E%B0for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E5%9B%9B%E5%A4%A7%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Wed, 25 Mar 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/python%E5%AE%9E%E7%8E%B0for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E5%9B%9B%E5%A4%A7%E5%AE%B9%E5%99%A8/</guid>
      <description>实现for循环遍历四大容器 #for循环 #作用：可以让指定的代码重复执行，可以循环遍历容器中的数据（从容器中把数据一个一个取出）
#格式：for 临时变量 in 容器：
​	对临时变量的处理
#特点：临时变量从容器中一个一个获取到</description>
    </item>
    
    <item>
      <title>PYTHON中的四种容器</title>
      <link>https://wcu99.github.io/post/python%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Sat, 21 Mar 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/python%E4%B8%AD%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%AE%B9%E5%99%A8/</guid>
      <description>PYTHON中的四种容器 列表list
元组Tuple
字典Ddict
集合set
四种数据类型的比较  元组Tuple是存放固定的数据 集合set中的数据插入和遍历的时间，随数据的增多而变慢 列表List中的数据插入和查询的时间，随数据的增多而变慢 字典Ddict中的数据插入和查询的速度非常快，不会因为数据太多而变慢  ​ 元组、集合和列表占用内存较少，字典占用内存较多，字典是一种通过占用空间来换取操作速度的一种数据类型。</description>
    </item>
    
    <item>
      <title>利用GitHubdesktop与pycharm更新博客文章</title>
      <link>https://wcu99.github.io/post/%E5%88%A9%E7%94%A8githubdesktop%E4%B8%8Epycharm%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</link>
      <pubDate>Wed, 11 Mar 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/%E5%88%A9%E7%94%A8githubdesktop%E4%B8%8Epycharm%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</guid>
      <description>前言 ​	之前分别介绍过如何在Windows和macos下搭建基于Hugo的静态博客，方法是部署到GitHub上实现的。这次来具体聊聊怎么用GitHub桌面客户端（GitHub desktop）配合python可视化工具（这边用的是pycharm）实现对博客进行修改，上传，删除。
1.安装GitHub desktop 用搜索引擎搜索github desktop即可，以下为网址
https://desktop.github.com/
可能需要用到科学上网才能顺利下载，这边不做科学上网的拓展，有兴趣的可以自己去了解。</description>
    </item>
    
    <item>
      <title>Windows环境下搭建Hugo的个人博客</title>
      <link>https://wcu99.github.io/post/windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 06 Feb 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>概述 之前写的一篇博客搭建是基于MacOS系统的，考虑到windows的受众面比较广泛，这里开一篇如何在windows上搭建博客，其中用到的方法和MacOS上大同小异，如若没看懂可以移步之前那篇，下文中会给出链接
一、（下载hugo） 1、hugo官方下载地址https://github.com/gohugoio/hugo/releases
2、创建文件夹。此处举例：F盘创建 hugo/bin，将解压后的**hugo.exe放到bin**目录下。
3、配置系统环境变量。将**F:\hugo\bin加到path**变量中，以上设置好后，就可以在cmd中查看是否安装成功。执行命令：
 $ hugo version</description>
    </item>
    
    <item>
      <title>MACOS环境hugo搭建的个人博客</title>
      <link>https://wcu99.github.io/post/macos%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9F%BA%E4%BA%8Ehogo%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 01 Feb 2020 12:22:45 +0800</pubDate>
      
      <guid>https://wcu99.github.io/post/macos%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9F%BA%E4%BA%8Ehogo%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>概述 Hugo 是基于go语言搭建起来的一个静态博客
搭建前的准备： 一、Mac os下推荐使用brew这个工具进行安装，下文使用到的也是brew命令安装Hugo。 二、安装Hugo 打开终端，使用命令：brew install Hugo，等待进度条结束即可。</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://wcu99.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wcu99.github.io/about/</guid>
      <description>那就慢慢加油吧</description>
    </item>
    
  </channel>
</rss>
